# Config file for https://travis-ci.org/
# Validate this file here - http://lint.travis-ci.org/

# Tell Travis CI we are using PHP.
language: php

# Define the php versions against we want to test our code
php:
    - 5.6
    - 7.0
    - 7.1

matrix:
  fast_finish: true
  allow_failures:
    - php: 7.0

# The platforms you wants to test on
os:
  - linux

#addons

# Tell Travis CI to monitor only 'master' branch
#branches:
#  only: master

# Cache folder, you can delete cache from Travis CI web interface
cache:
    directories:
        - vendor
        - $HOME/.composer/cache

# Run services while deploying
services:
  #- mongodb
  #- rabbitmq
  #- postgresql
  - redis

# git configs
git:
  depth: 1

# We don't want to run linux commands as super user
#false means Travis will run this in a container
sudo: false

# Disable x-debug to speed up things
before_install: phpenv config-rm xdebug.ini

# Install packages those will be required during build
install:
  - composer install --no-interaction

# Prepare test environment
before_script:
  - "export DISPLAY=:99.0"
  - "sh -e /etc/init.d/xvfb start"
  - sleep 3 # give xvfb some time to start
  - echo "Download selenium-server-standalone jar file"
  - wget -c -nc --retry-connrefused --tries=0 http://goo.gl/EoH85x -O selenium-server-standalone.jar
  - echo "Run selenium server - background process"
  - nohup bash -c "java -jar selenium-server-standalone.jar &" && sleep 1; cat nohup.out
  - echo "Run php in-built server - background process"
  - nohup bash -c "php -S localhost:8000 2>&1 -t app &" && sleep 1; cat nohup.out

# Run main commands
script:
  - php codecept run unit # self tests
  - 'php codecept run coverage'  # run coverage tests on php only
  - php codecept run functional -c frameworks-yii-basic # Yii2 tests

#after_script:

#after_success:

#after_failure:
